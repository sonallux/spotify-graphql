"Directs the executor to include this field or fragment only when the `if` argument is true"
directive @include(
    "Included when true."
    if: Boolean!
  ) on FIELD | FRAGMENT_SPREAD | INLINE_FRAGMENT

"Directs the executor to skip this field or fragment when the `if`'argument is true."
directive @skip(
    "Skipped when true."
    if: Boolean!
  ) on FIELD | FRAGMENT_SPREAD | INLINE_FRAGMENT

"Marks the field or enum value as deprecated"
directive @deprecated(
    "The reason for the deprecation"
    reason: String = "No longer supported"
  ) on FIELD_DEFINITION | ENUM_VALUE

"Exposes a URL that specifies the behaviour of this scalar."
directive @specifiedBy(
    "The URL that specifies the behaviour of this scalar."
    url: String!
  ) on SCALAR

union UnionTrackEpisode = Episode | Track

"[AlbumObject](https://developer.spotify.com/documentation/web-api/reference/#object-albumobject)"
type Album {
  "The type of the album: `album`, `single`, or `compilation`."
  album_type: String
  "The artists of the album. Each artist object includes a link in `href` to more detailed information about the artist."
  artists: [Artist]
  "The markets in which the album is available: [ISO 3166-1 alpha-2 country codes](http://en.wikipedia.org/wiki/ISO_3166-1_alpha-2). Note that an album is considered available in a market when at least 1 of its tracks is available in that market."
  available_markets: [String]
  "The copyright statements of the album."
  copyrights: [Copyright]
  "Known external IDs for the album."
  external_ids: ExternalId
  "Known external URLs for this album."
  external_urls: ExternalUrl
  "A list of the genres used to classify the album. For example: 'Prog Rock' , 'Post-Grunge'. (If not yet classified, the array is empty.)"
  genres: [String]
  "A link to the Web API endpoint providing full details of the album."
  href: String
  "The Spotify ID for the album."
  id: String
  "The cover art for the album in various sizes, widest first."
  images: [Image]
  "The label for the album."
  label: String
  "The name of the album. In case of an album takedown, the value may be an empty string."
  name: String
  "The popularity of the album. The value will be between 0 and 100, with 100 being the most popular. The popularity is calculated from the popularity of the album's individual tracks."
  popularity: Int
  "The date the album was first released, for example '1981-12-15'. Depending on the precision, it might be shown as '1981' or '1981-12'."
  release_date: String
  "The precision with which release_date value is known: 'year' , 'month' , or 'day'."
  release_date_precision: String
  "Included in the response when a content restriction is applied. See [Restriction Object](https://developer.spotify.com/documentation/web-api/reference/#object-albumrestrictionobject) for more details."
  restrictions: AlbumRestriction
  "The object type: 'album'"
  spotify_type: String
  "The tracks of the album."
  tracks(
    "The maximum number of tracks to return. Default: 20. Minimum: 1. Maximum: 50."
    limit: Int, 
    "The index of the first track to return. Default: 0 (the first object). Use with limit to get the next set of tracks."
    offset: Int
  ): PagingTrack
  "The Spotify URI for the album."
  uri: String
}

"[AlbumRestrictionObject](https://developer.spotify.com/documentation/web-api/reference/#object-albumrestrictionobject)"
type AlbumRestriction {
  """
  The reason for the restriction. Supported values:  
  
  - `market` - The content item is not available in the given market.  
  - `product` - The content item is not available for the user's subscription type.  
  - `explicit` - The content item is explicit and the user's account is set to not play explicit content.  
    Additional reasons may be added in the future. **Note**: If you use this field, make sure that your application safely handles unknown values.
  """
  reason: String
}

"[ArtistObject](https://developer.spotify.com/documentation/web-api/reference/#object-artistobject)"
type Artist {
  albums(
    """
    A comma-separated list of keywords that will be used to filter the response. If not supplied, all album types will be returned. Valid values are:  
    - `album`  
    - `single`  
    - `appears_on`  
    - `compilation`  
    For example: `include_groups=album,single`.
    """
    include_groups: String, 
    "The number of album objects to return. Default: 20. Minimum: 1. Maximum: 50. For example: `limit=2`"
    limit: Int, 
    "The index of the first album to return. Default: 0 (i.e., the first album). Use with `limit` to get the next set of albums."
    offset: Int
  ): PagingAlbum
  "Known external URLs for this artist."
  external_urls: ExternalUrl
  "Information about the followers of the artist."
  followers: Followers
  "A list of the genres the artist is associated with. For example: `'Prog Rock'` , `'Post-Grunge'`. (If not yet classified, the array is empty.)"
  genres: [String]
  "A link to the Web API endpoint providing full details of the artist."
  href: String
  "The [Spotify ID](https://developer.spotify.com/documentation/web-api/#spotify-uris-and-ids) for the artist."
  id: String
  "Images of the artist in various sizes, widest first."
  images: [Image]
  "The name of the artist."
  name: String
  "The popularity of the artist. The value will be between 0 and 100, with 100 being the most popular. The artist's popularity is calculated from the popularity of all the artist's tracks."
  popularity: Int
  related_artists: [Artist]
  "The object type: `'artist'`"
  spotify_type: String
  top_tracks: [Track]
  "The [Spotify URI](https://developer.spotify.com/documentation/web-api/#spotify-uris-and-ids) for the artist."
  uri: String
}

"[CategoryObject](https://developer.spotify.com/documentation/web-api/reference/#object-categoryobject)"
type Category {
  "A link to the Web API endpoint returning full details of the category."
  href: String
  "The category icon, in various sizes."
  icons: [Image]
  "The [Spotify category ID](https://developer.spotify.com/documentation/web-api/#spotify-uris-and-ids) of the category."
  id: String
  "The name of the category."
  name: String
  playlists(
    "A country: an [ISO 3166-1 alpha-2 country code](http://en.wikipedia.org/wiki/ISO_3166-1_alpha-2). Provide this parameter to ensure that the category exists for a particular country."
    country: String, 
    "The maximum number of items to return. Default: 20. Minimum: 1. Maximum: 50."
    limit: Int, 
    "The index of the first item to return. Default: 0 (the first object). Use with `limit` to get the next set of items."
    offset: Int
  ): PagingPlaylist
}

"[CopyrightObject](https://developer.spotify.com/documentation/web-api/reference/#object-copyrightobject)"
type Copyright {
  "The type of copyright: `C` = the copyright, `P` = the sound recording (performance) copyright."
  spotify_type: String
  "The copyright text for this content."
  text: String
}

"[EpisodeObject](https://developer.spotify.com/documentation/web-api/reference/#object-episodeobject)"
type Episode {
  "A URL to a 30 second preview (MP3 format) of the episode. `null` if not available."
  audio_preview_url: String
  "A description of the episode. HTML tags are stripped away from this field, use `html_description` field in case HTML tags are needed."
  description: String
  "The episode length in milliseconds."
  duration_ms: Int
  "Whether or not the episode has explicit content (true = yes it does; false = no it does not OR unknown)."
  explicit: Boolean
  "External URLs for this episode."
  external_urls: ExternalUrl
  "A link to the Web API endpoint providing full details of the episode."
  href: String
  "A description of the episode. This field may contain HTML tags."
  html_description: String
  "The [Spotify ID](https://developer.spotify.com/documentation/web-api/#spotify-uris-and-ids) for the episode."
  id: String
  "The cover art for the episode in various sizes, widest first."
  images: [Image]
  "True if the episode is hosted outside of Spotify's CDN."
  is_externally_hosted: Boolean
  "True if the episode is playable in the given market. Otherwise false."
  is_playable: Boolean
  "**Note: This field is deprecated and might be removed in the future. Please use the `languages` field instead.** The language used in the episode, identified by a [ISO 639](https://en.wikipedia.org/wiki/ISO_639) code."
  language: String
  "A list of the languages used in the episode, identified by their [ISO 639](https://en.wikipedia.org/wiki/ISO_639) code."
  languages: [String]
  "The name of the episode."
  name: String
  "The date the episode was first released, for example `'1981-12-15'`. Depending on the precision, it might be shown as `'1981'` or `'1981-12'`."
  release_date: String
  "The precision with which `release_date` value is known: `'year'`, `'month'`, or `'day'`."
  release_date_precision: String
  "Included in the response when a content restriction is applied. See [Restriction Object](https://developer.spotify.com/documentation/web-api/reference/#object-episoderestrictionobject) for more details."
  restrictions: EpisodeRestriction
  "The user's most recent position in the episode. Set if the supplied access token is a user token and has the scope `user-read-playback-position`."
  resume_point: ResumePoint
  "The show on which the episode belongs."
  show: Show
  "The object type: 'episode'."
  spotify_type: String
  "The [Spotify URI](https://developer.spotify.com/documentation/web-api/#spotify-uris-and-ids) for the episode."
  uri: String
}

"[EpisodeRestrictionObject](https://developer.spotify.com/documentation/web-api/reference/#object-episoderestrictionobject)"
type EpisodeRestriction {
  """
  The reason for the restriction. Supported values:  
  
  - `market` - The content item is not available in the given market.  
  - `product` - The content item is not available for the user's subscription type.  
  - `explicit` - The content item is explicit and the user's account is set to not play explicit content.  
    Additional reasons may be added in the future. **Note**: If you use this field, make sure that your application safely handles unknown values.
  """
  reason: String
}

"[ExplicitContentSettingsObject](https://developer.spotify.com/documentation/web-api/reference/#object-explicitcontentsettingsobject)"
type ExplicitContentSettings {
  "When `true`, indicates that explicit content should not be played."
  filter_enabled: Boolean
  "When `true`, indicates that the explicit content setting is locked and can't be changed by the user."
  filter_locked: Boolean
}

"[ExternalIdObject](https://developer.spotify.com/documentation/web-api/reference/#object-externalidobject)"
type ExternalId {
  "[International Article Number](http://en.wikipedia.org/wiki/International_Article_Number_%28EAN%29)"
  ean: String
  "[International Standard Recording Code](http://en.wikipedia.org/wiki/International_Standard_Recording_Code)"
  isrc: String
  "[Universal Product Code](http://en.wikipedia.org/wiki/Universal_Product_Code)"
  upc: String
}

"[ExternalUrlObject](https://developer.spotify.com/documentation/web-api/reference/#object-externalurlobject)"
type ExternalUrl {
  "The [Spotify URL](https://developer.spotify.com/documentation/web-api/#spotify-uris-and-ids) for the object."
  spotify: String
}

type FeaturedPlaylist {
  message: String
  playlists: PagingPlaylist
}

"[FollowersObject](https://developer.spotify.com/documentation/web-api/reference/#object-followersobject)"
type Followers {
  "A link to the Web API endpoint providing full details of the followers; `null` if not available. Please note that this will always be set to null, as the Web API does not support it at the moment."
  href: String
  "The total number of followers."
  total: Int
}

"[ImageObject](https://developer.spotify.com/documentation/web-api/reference/#object-imageobject)"
type Image {
  "The image height in pixels. If unknown: `null` or not returned."
  height: Int
  "The source URL of the image."
  url: String
  "The image width in pixels. If unknown: `null` or not returned."
  width: Int
}

"[LinkedTrackObject](https://developer.spotify.com/documentation/web-api/reference/#object-linkedtrackobject)"
type LinkedTrack {
  "Known external URLs for this track."
  external_urls: ExternalUrl
  "A link to the Web API endpoint providing full details of the track."
  href: String
  "The [Spotify ID](https://developer.spotify.com/documentation/web-api/#spotify-uris-and-ids) for the track."
  id: String
  "The object type: 'track'."
  spotify_type: String
  "The [Spotify URI](https://developer.spotify.com/documentation/web-api/#spotify-uris-and-ids) for the track."
  uri: String
}

"[PagingAlbumObject](https://developer.spotify.com/documentation/web-api/reference/#object-pagingobject)"
type PagingAlbum {
  "A link to the Web API endpoint returning the full result of the request"
  href: String
  "The requested data."
  items: [Album]
  "The maximum number of items in the response (as set in the query or by default)."
  limit: Int
  "URL to the next page of items. ( `null` if none)"
  next: String
  "The offset of the items returned (as set in the query or by default)"
  offset: Int
  "URL to the previous page of items. ( `null` if none)"
  previous: String
  "The total number of items available to return."
  total: Int
}

"[PagingCategoryObject](https://developer.spotify.com/documentation/web-api/reference/#object-pagingobject)"
type PagingCategory {
  "A link to the Web API endpoint returning the full result of the request"
  href: String
  "The requested data."
  items: [Category]
  "The maximum number of items in the response (as set in the query or by default)."
  limit: Int
  "URL to the next page of items. ( `null` if none)"
  next: String
  "The offset of the items returned (as set in the query or by default)"
  offset: Int
  "URL to the previous page of items. ( `null` if none)"
  previous: String
  "The total number of items available to return."
  total: Int
}

"[PagingEpisodeObject](https://developer.spotify.com/documentation/web-api/reference/#object-pagingobject)"
type PagingEpisode {
  "A link to the Web API endpoint returning the full result of the request"
  href: String
  "The requested data."
  items: [Episode]
  "The maximum number of items in the response (as set in the query or by default)."
  limit: Int
  "URL to the next page of items. ( `null` if none)"
  next: String
  "The offset of the items returned (as set in the query or by default)"
  offset: Int
  "URL to the previous page of items. ( `null` if none)"
  previous: String
  "The total number of items available to return."
  total: Int
}

"[PagingPlaylistObject](https://developer.spotify.com/documentation/web-api/reference/#object-pagingobject)"
type PagingPlaylist {
  "A link to the Web API endpoint returning the full result of the request"
  href: String
  "The requested data."
  items: [Playlist]
  "The maximum number of items in the response (as set in the query or by default)."
  limit: Int
  "URL to the next page of items. ( `null` if none)"
  next: String
  "The offset of the items returned (as set in the query or by default)"
  offset: Int
  "URL to the previous page of items. ( `null` if none)"
  previous: String
  "The total number of items available to return."
  total: Int
}

"[PagingPlaylistTrackObject](https://developer.spotify.com/documentation/web-api/reference/#object-pagingobject)"
type PagingPlaylistTrack {
  "A link to the Web API endpoint returning the full result of the request"
  href: String
  "The requested data."
  items: [PlaylistTrack]
  "The maximum number of items in the response (as set in the query or by default)."
  limit: Int
  "URL to the next page of items. ( `null` if none)"
  next: String
  "The offset of the items returned (as set in the query or by default)"
  offset: Int
  "URL to the previous page of items. ( `null` if none)"
  previous: String
  "The total number of items available to return."
  total: Int
}

"[PagingTrackObject](https://developer.spotify.com/documentation/web-api/reference/#object-pagingobject)"
type PagingTrack {
  "A link to the Web API endpoint returning the full result of the request"
  href: String
  "The requested data."
  items: [Track]
  "The maximum number of items in the response (as set in the query or by default)."
  limit: Int
  "URL to the next page of items. ( `null` if none)"
  next: String
  "The offset of the items returned (as set in the query or by default)"
  offset: Int
  "URL to the previous page of items. ( `null` if none)"
  previous: String
  "The total number of items available to return."
  total: Int
}

"[PlaylistObject](https://developer.spotify.com/documentation/web-api/reference/#object-playlistobject)"
type Playlist {
  "`true` if the owner allows other users to modify the playlist."
  collaborative: Boolean
  "The playlist description. *Only returned for modified, verified playlists, otherwise* `null`."
  description: String
  "Known external URLs for this playlist."
  external_urls: ExternalUrl
  "Information about the followers of the playlist."
  followers: Followers
  "A link to the Web API endpoint providing full details of the playlist."
  href: String
  "The [Spotify ID](https://developer.spotify.com/documentation/web-api/#spotify-uris-and-ids) for the playlist."
  id: String
  "Images for the playlist. The array may be empty or contain up to three images. The images are returned by size in descending order. See [Working with Playlists](https://developer.spotify.com/documentation/general/guides/working-with-playlists/). *Note: If returned, the source URL for the image (`url`) is temporary and will expire in less than a day.*"
  images: [Image]
  "The name of the playlist."
  name: String
  "The user who owns the playlist"
  owner: PublicUser
  "The playlist's public/private status: `true` the playlist is public, `false` the playlist is private, `null` the playlist status is not relevant. For more about public/private status, see [Working with Playlists](https://developer.spotify.com/documentation/general/guides/working-with-playlists/)"
  public: Boolean
  "The version identifier for the current playlist. Can be supplied in other requests to target a specific playlist version"
  snapshot_id: String
  "The object type: 'playlist'"
  spotify_type: String
  "Information about the tracks of the playlist. Note, a track object may be `null`. This can happen if a track is no longer available."
  tracks(
    "The maximum number of items to return. Default: 100. Minimum: 1. Maximum: 100."
    limit: Int, 
    "The index of the first item to return. Default: 0 (the first object)."
    offset: Int
  ): PagingPlaylistTrack
  "The [Spotify URI](https://developer.spotify.com/documentation/web-api/#spotify-uris-and-ids) for the playlist."
  uri: String
}

"[PlaylistTrackObject](https://developer.spotify.com/documentation/web-api/reference/#object-playlisttrackobject)"
type PlaylistTrack {
  "The date and time the track or episode was added. *Note that some very old playlists may return `null` in this field.*"
  added_at: String
  "The Spotify user who added the track or episode. *Note that some very old playlists may return `null` in this field.*"
  added_by: PublicUser
  "Whether this track or episode is a [local file](https://developer.spotify.com/web-api/local-files-spotify-playlists/) or not."
  is_local: Boolean
  "Information about the track or episode."
  track: UnionTrackEpisode
}

"[PrivateUserObject](https://developer.spotify.com/documentation/web-api/reference/#object-privateuserobject)"
type PrivateUser {
  "The country of the user, as set in the user's account profile. An [ISO 3166-1 alpha-2 country code](http://en.wikipedia.org/wiki/ISO_3166-1_alpha-2). *This field is only available when the current user has granted access to the [user-read-private](https://developer.spotify.com/documentation/general/guides/authorization-guide/#list-of-scopes) scope.*"
  country: String
  "The name displayed on the user's profile. `null` if not available."
  display_name: String
  "The user's email address, as entered by the user when creating their account. ***Important!** This email address is unverified; there is no proof that it actually belongs to the user.* *This field is only available when the current user has granted access to the [user-read-email](https://developer.spotify.com/documentation/general/guides/authorization-guide/#list-of-scopes) scope.*"
  email: String
  "The user's explicit content settings. *This field is only available when the current user has granted access to the [user-read-private](https://developer.spotify.com/documentation/general/guides/authorization-guide/#list-of-scopes) scope.*"
  explicit_content: ExplicitContentSettings
  "Known external URLs for this user."
  external_urls: ExternalUrl
  "Information about the followers of the user."
  followers: Followers
  "A link to the Web API endpoint for this user."
  href: String
  "The [Spotify user ID](https://developer.spotify.com/documentation/web-api/#spotify-uris-and-ids) for the user."
  id: String
  "The user's profile image."
  images: [Image]
  "The user's Spotify subscription level: 'premium', 'free', etc. (The subscription level 'open' can be considered the same as 'free'.) *This field is only available when the current user has granted access to the [user-read-private](https://developer.spotify.com/documentation/general/guides/authorization-guide/#list-of-scopes) scope.*"
  product: String
  "The object type: 'user'"
  spotify_type: String
  "The [Spotify URI](https://developer.spotify.com/documentation/web-api/#spotify-uris-and-ids) for the user."
  uri: String
}

"[PublicUserObject](https://developer.spotify.com/documentation/web-api/reference/#object-publicuserobject)"
type PublicUser {
  "The name displayed on the user's profile. `null` if not available."
  display_name: String
  "Known public external URLs for this user."
  external_urls: ExternalUrl
  "Information about the followers of this user."
  followers: Followers
  "A link to the Web API endpoint for this user."
  href: String
  "The [Spotify user ID](https://developer.spotify.com/documentation/web-api/#spotify-uris-and-ids) for this user."
  id: String
  "The user's profile image."
  images: [Image]
  "The object type: 'user'"
  spotify_type: String
  "The [Spotify URI](https://developer.spotify.com/documentation/web-api/#spotify-uris-and-ids) for this user."
  uri: String
}

type Query {
  album(
    "The Spotify ID of the object to query. Either `id` or `uri` must be specified"
    id: String, 
    "The Spotify URI of the object to query. Either `id` or `uri` must be specified"
    uri: String
  ): Album
  albums(
    "A list of Spotify IDs of the objects to query. Either `ids` or `uris` must be specified"
    ids: [String], 
    "A list of Spotify URIs of the objects to query. Either `ids` or `uris` must be specified"
    uris: [String]
  ): [Album]
  artist(
    "The Spotify ID of the object to query. Either `id` or `uri` must be specified"
    id: String, 
    "The Spotify URI of the object to query. Either `id` or `uri` must be specified"
    uri: String
  ): Artist
  artists(
    "A list of Spotify IDs of the objects to query. Either `ids` or `uris` must be specified"
    ids: [String], 
    "A list of Spotify URIs of the objects to query. Either `ids` or `uris` must be specified"
    uris: [String]
  ): [Artist]
  categories(
    "A country: an [ISO 3166-1 alpha-2 country code](http://en.wikipedia.org/wiki/ISO_3166-1_alpha-2). Provide this parameter if you want to narrow the list of returned categories to those relevant to a particular country. If omitted, the returned items will be globally relevant."
    country: String, 
    "The maximum number of categories to return. Default: 20. Minimum: 1. Maximum: 50."
    limit: Int, 
    "The desired language, consisting of an [ISO 639-1](http://en.wikipedia.org/wiki/ISO_639-1) language code and an [ISO 3166-1 alpha-2 country code](http://en.wikipedia.org/wiki/ISO_3166-1_alpha-2), joined by an underscore. For example: `es_MX`, meaning \"Spanish (Mexico)\". Provide this parameter if you want the category metadata returned in a particular language. Note that, if `locale` is not supplied, or if the specified language is not available, all strings will be returned in the Spotify default language (American English). The `locale` parameter, combined with the `country` parameter, may give odd results if not carefully matched. For example `country=SE&locale=de_DE` will return a list of categories relevant to Sweden but as German language strings."
    locale: String, 
    "The index of the first item to return. Default: 0 (the first object). Use with `limit` to get the next set of categories."
    offset: Int
  ): PagingCategory
  category(
    "The [Spotify category ID](https://developer.spotify.com/documentation/web-api/#spotify-uris-and-ids) for the category."
    category_id: String!, 
    "A country: an [ISO 3166-1 alpha-2 country code](http://en.wikipedia.org/wiki/ISO_3166-1_alpha-2). Provide this parameter to ensure that the category exists for a particular country."
    country: String, 
    "The desired language, consisting of an [ISO 639-1](http://en.wikipedia.org/wiki/ISO_639-1) language code and an [ISO 3166-1 alpha-2 country code](http://en.wikipedia.org/wiki/ISO_3166-1_alpha-2), joined by an underscore. For example: `es_MX`, meaning \"Spanish (Mexico)\". Provide this parameter if you want the category strings returned in a particular language. Note that, if `locale` is not supplied, or if the specified language is not available, the category strings returned will be in the Spotify default language (American English)."
    locale: String
  ): Category
  episode(
    "The Spotify ID of the object to query. Either `id` or `uri` must be specified"
    id: String, 
    "The Spotify URI of the object to query. Either `id` or `uri` must be specified"
    uri: String
  ): Episode
  episodes(
    "A list of Spotify IDs of the objects to query. Either `ids` or `uris` must be specified"
    ids: [String], 
    "A list of Spotify URIs of the objects to query. Either `ids` or `uris` must be specified"
    uris: [String]
  ): [Episode]
  featured_playlists(
    "A country: an [ISO 3166-1 alpha-2 country code](http://en.wikipedia.org/wiki/ISO_3166-1_alpha-2). Provide this parameter if you want the list of returned items to be relevant to a particular country. If omitted, the returned items will be relevant to all countries."
    country: String, 
    "The maximum number of items to return. Default: 20. Minimum: 1. Maximum: 50."
    limit: Int, 
    "The desired language, consisting of a lowercase [ISO 639-1 language code](http://en.wikipedia.org/wiki/ISO_639-1) and an uppercase [ISO 3166-1 alpha-2 country code](http://en.wikipedia.org/wiki/ISO_3166-1_alpha-2), joined by an underscore. For example: `es_MX`, meaning \"Spanish (Mexico)\". Provide this parameter if you want the results returned in a particular language (where available). Note that, if `locale` is not supplied, or if the specified language is not available, all strings will be returned in the Spotify default language (American English). The `locale` parameter, combined with the `country` parameter, may give odd results if not carefully matched. For example `country=SE&locale=de_DE` will return a list of categories relevant to Sweden but as German language strings."
    locale: String, 
    "The index of the first item to return. Default: 0 (the first object). Use with `limit` to get the next set of items."
    offset: Int, 
    "A timestamp in [ISO 8601 format](http://en.wikipedia.org/wiki/ISO_8601): `yyyy-MM-ddTHH:mm:ss`. Use this parameter to specify the user's local time to get results tailored for that specific date and time in the day. If not provided, the response defaults to the current UTC time. Example: \"2014-10-23T09:00:00\" for a user whose local time is 9AM. If there were no featured playlists (or there is no data) at the specified time, the response will revert to the current UTC time."
    timestamp: String
  ): FeaturedPlaylist
  markets: [String]
  me: PrivateUser
  new_releases(
    "A country: an [ISO 3166-1 alpha-2 country code](http://en.wikipedia.org/wiki/ISO_3166-1_alpha-2). Provide this parameter if you want the list of returned items to be relevant to a particular country. If omitted, the returned items will be relevant to all countries."
    country: String, 
    "The maximum number of items to return. Default: 20. Minimum: 1. Maximum: 50."
    limit: Int, 
    "The index of the first item to return. Default: 0 (the first object). Use with `limit` to get the next set of items."
    offset: Int
  ): PagingAlbum
  playlist(
    "The Spotify ID of the object to query. Either `id` or `uri` must be specified"
    id: String, 
    "The Spotify URI of the object to query. Either `id` or `uri` must be specified"
    uri: String
  ): Playlist
  playlists(
    "A list of Spotify IDs of the objects to query. Either `ids` or `uris` must be specified"
    ids: [String], 
    "A list of Spotify URIs of the objects to query. Either `ids` or `uris` must be specified"
    uris: [String]
  ): [Playlist]
  show(
    "The Spotify ID of the object to query. Either `id` or `uri` must be specified"
    id: String, 
    "The Spotify URI of the object to query. Either `id` or `uri` must be specified"
    uri: String
  ): Show
  shows(
    "A list of Spotify IDs of the objects to query. Either `ids` or `uris` must be specified"
    ids: [String], 
    "A list of Spotify URIs of the objects to query. Either `ids` or `uris` must be specified"
    uris: [String]
  ): [Show]
  track(
    "The Spotify ID of the object to query. Either `id` or `uri` must be specified"
    id: String, 
    "The Spotify URI of the object to query. Either `id` or `uri` must be specified"
    uri: String
  ): Track
  tracks(
    "A list of Spotify IDs of the objects to query. Either `ids` or `uris` must be specified"
    ids: [String], 
    "A list of Spotify URIs of the objects to query. Either `ids` or `uris` must be specified"
    uris: [String]
  ): [Track]
  user(
    "The user's [Spotify user ID](https://developer.spotify.com/documentation/web-api/#spotify-uris-and-ids)."
    user_id: String!
  ): PublicUser
}

"[ResumePointObject](https://developer.spotify.com/documentation/web-api/reference/#object-resumepointobject)"
type ResumePoint {
  "Whether or not the episode has been fully played by the user."
  fully_played: Boolean
  "The user's most recent position in the episode in milliseconds."
  resume_position_ms: Int
}

"[ShowObject](https://developer.spotify.com/documentation/web-api/reference/#object-showobject)"
type Show {
  "A list of the countries in which the show can be played, identified by their [ISO 3166-1 alpha-2](http://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) code."
  available_markets: [String]
  "The copyright statements of the show."
  copyrights: [Copyright]
  "A description of the show."
  description: String
  "A list of the show's episodes."
  episodes(
    "The maximum number of episodes to return. Default: 20. Minimum: 1. Maximum: 50."
    limit: Int, 
    "The index of the first episode to return. Default: 0 (the first object). Use with limit to get the next set of episodes."
    offset: Int
  ): PagingEpisode
  "Whether or not the show has explicit content (true = yes it does; false = no it does not OR unknown)."
  explicit: Boolean
  "External URLs for this show."
  external_urls: ExternalUrl
  "A link to the Web API endpoint providing full details of the show."
  href: String
  "The [Spotify ID](https://developer.spotify.com/documentation/web-api/#spotify-uris-and-ids) for the show."
  id: String
  "The cover art for the show in various sizes, widest first."
  images: [Image]
  "True if all of the show's episodes are hosted outside of Spotify's CDN. This field might be `null` in some cases."
  is_externally_hosted: Boolean
  "A list of the languages used in the show, identified by their [ISO 639](https://en.wikipedia.org/wiki/ISO_639) code."
  languages: [String]
  "The media type of the show."
  media_type: String
  "The name of the episode."
  name: String
  "The publisher of the show."
  publisher: String
  "The object type: 'show'."
  spotify_type: String
  "The [Spotify URI](https://developer.spotify.com/documentation/web-api/#spotify-uris-and-ids) for the show."
  uri: String
}

"[TrackObject](https://developer.spotify.com/documentation/web-api/reference/#object-trackobject)"
type Track {
  "The album on which the track appears. The album object includes a link in `href` to full information about the album."
  album: Album
  "The artists who performed the track. Each artist object includes a link in `href` to more detailed information about the artist."
  artists: [Artist]
  "A list of the countries in which the track can be played, identified by their [ISO 3166-1 alpha-2](http://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) code."
  available_markets: [String]
  "The disc number (usually `1` unless the album consists of more than one disc)."
  disc_number: Int
  "The track length in milliseconds."
  duration_ms: Int
  "Whether or not the track has explicit lyrics ( `true` = yes it does; `false` = no it does not OR unknown)."
  explicit: Boolean
  "Known external IDs for the track."
  external_ids: ExternalId
  "Known external URLs for this track."
  external_urls: ExternalUrl
  "A link to the Web API endpoint providing full details of the track."
  href: String
  "The [Spotify ID](https://developer.spotify.com/documentation/web-api/#spotify-uris-and-ids) for the track."
  id: String
  "Whether or not the track is from a local file."
  is_local: Boolean
  "Part of the response when [Track Relinking](https://developer.spotify.com/documentation/general/guides/track-relinking-guide/) is applied. If `true` , the track is playable in the given market. Otherwise `false`."
  is_playable: Boolean
  "Part of the response when [Track Relinking](https://developer.spotify.com/documentation/general/guides/track-relinking-guide/) is applied, and the requested track has been replaced with different track. The track in the `linked_from` object contains information about the originally requested track."
  linked_from: LinkedTrack
  "The name of the track."
  name: String
  """
  The popularity of the track. The value will be between 0 and 100, with 100 being the most popular.  
  The popularity of a track is a value between 0 and 100, with 100 being the most popular. The popularity is calculated by algorithm and is based, in the most part, on the total number of plays the track has had and how recent those plays are.  
  Generally speaking, songs that are being played a lot now will have a higher popularity than songs that were played a lot in the past. Duplicate tracks (e.g. the same track from a single and an album) are rated independently. Artist and album popularity is derived mathematically from track popularity. Note that the popularity value may lag actual popularity by a few days: the value is not updated in real time.
  """
  popularity: Int
  "A link to a 30 second preview (MP3 format) of the track. Can be `null`"
  preview_url: String
  "Included in the response when a content restriction is applied. See [Restriction Object](https://developer.spotify.com/documentation/web-api/reference/#object-trackrestrictionobject) for more details."
  restrictions: TrackRestriction
  "The object type: 'track'."
  spotify_type: String
  "The number of the track. If an album has several discs, the track number is the number on the specified disc."
  track_number: Int
  "The [Spotify URI](https://developer.spotify.com/documentation/web-api/#spotify-uris-and-ids) for the track."
  uri: String
}

"[TrackRestrictionObject](https://developer.spotify.com/documentation/web-api/reference/#object-trackrestrictionobject)"
type TrackRestriction {
  """
  The reason for the restriction. Supported values:  
  
  - `market` - The content item is not available in the given market.  
  - `product` - The content item is not available for the user's subscription type.  
  - `explicit` - The content item is explicit and the user's account is set to not play explicit content.  
    Additional reasons may be added in the future. **Note**: If you use this field, make sure that your application safely handles unknown values.
  """
  reason: String
}
