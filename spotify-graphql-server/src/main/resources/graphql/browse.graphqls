extend type Query {
  browse: Browse
}

type Browse {
  categories(
    "A country: an [ISO 3166-1 alpha-2 country code](http://en.wikipedia.org/wiki/ISO_3166-1_alpha-2). Provide this parameter if you want to narrow the list of returned categories to those relevant to a particular country. If omitted, the returned items will be globally relevant."
    country: String, 
    "The maximum number of items to return. Default: 20. Minimum: 1. Maximum: 50."
    limit: Int = 20, 
    """
    The desired language, consisting of an [ISO 639-1](http://en.wikipedia.org/wiki/ISO_639-1) language code and an [ISO 3166-1 alpha-2 country code](http://en.wikipedia.org/wiki/ISO_3166-1_alpha-2), joined by an underscore. For example: `es_MX`, meaning "Spanish (Mexico)". Provide this parameter if you want the category metadata returned in a particular language. <br>
    _**Note**: if `locale` is not supplied, or if the specified language is not available, all strings will be returned in the Spotify default language (American English). The `locale` parameter, combined with the `country` parameter, may give odd results if not carefully matched. For example `country=SE&locale=de_DE` will return a list of categories relevant to Sweden but as German language strings._
    """
    locale: String, 
    "The index of the first item to return. Default: 0 (the first item). Use with limit to get the next set of items."
    offset: Int = 0
  ): CategoryPaging
  category(
    "The [Spotify category ID](/documentation/web-api/#spotify-uris-and-ids) for the category."
    category_id: String!, 
    "A country: an [ISO 3166-1 alpha-2 country code](http://en.wikipedia.org/wiki/ISO_3166-1_alpha-2). Provide this parameter to ensure that the category exists for a particular country."
    country: String, 
    "The desired language, consisting of an [ISO 639-1](http://en.wikipedia.org/wiki/ISO_639-1) language code and an [ISO 3166-1 alpha-2 country code](http://en.wikipedia.org/wiki/ISO_3166-1_alpha-2), joined by an underscore. For example: `es_MX`, meaning &quot;Spanish (Mexico)&quot;. Provide this parameter if you want the category strings returned in a particular language.<br> _**Note**: if `locale` is not supplied, or if the specified language is not available, the category strings returned will be in the Spotify default language (American English)._"
    locale: String
  ): Category
  featured_playlists(
    "A country: an [ISO 3166-1 alpha-2 country code](http://en.wikipedia.org/wiki/ISO_3166-1_alpha-2). Provide this parameter if you want the list of returned items to be relevant to a particular country. If omitted, the returned items will be relevant to all countries."
    country: String, 
    "The maximum number of items to return. Default: 20. Minimum: 1. Maximum: 50."
    limit: Int = 20, 
    """
    The desired language, consisting of a lowercase [ISO 639-1 language code](http://en.wikipedia.org/wiki/ISO_639-1) and an uppercase [ISO 3166-1 alpha-2 country code](http://en.wikipedia.org/wiki/ISO_3166-1_alpha-2), joined by an underscore. For example: `es_MX`, meaning "Spanish (Mexico)". Provide this parameter if you want the results returned in a particular language (where available). <br>
    _**Note**: if `locale` is not supplied, or if the specified language is not available, all strings will be returned in the Spotify default language (American English). The `locale` parameter, combined with the `country` parameter, may give odd results if not carefully matched. For example `country=SE&locale=de_DE` will return a list of categories relevant to Sweden but as German language strings._
    """
    locale: String, 
    "The index of the first item to return. Default: 0 (the first item). Use with limit to get the next set of items."
    offset: Int = 0, 
    "A timestamp in [ISO 8601 format](http://en.wikipedia.org/wiki/ISO_8601): `yyyy-MM-ddTHH:mm:ss`. Use this parameter to specify the user's local time to get results tailored for that specific date and time in the day. If not provided, the response defaults to the current UTC time. Example: \"2014-10-23T09:00:00\" for a user whose local time is 9AM. If there were no featured playlists (or there is no data) at the specified time, the response will revert to the current UTC time."
    timestamp: String
  ): PagedPlaylistsAndMessage
  new_releases(
    "A country: an [ISO 3166-1 alpha-2 country code](http://en.wikipedia.org/wiki/ISO_3166-1_alpha-2). Provide this parameter if you want the list of returned items to be relevant to a particular country. If omitted, the returned items will be relevant to all countries."
    country: String, 
    "The maximum number of items to return. Default: 20. Minimum: 1. Maximum: 50."
    limit: Int = 20, 
    "The index of the first item to return. Default: 0 (the first item). Use with limit to get the next set of items."
    offset: Int = 0
  ): AlbumsPaging
}

type Category {
  "A link to the Web API endpoint returning full details of the category."
  href: String
  "The category icon, in various sizes."
  icons: [Image]
  "The [Spotify category ID](/documentation/web-api/#spotify-uris-and-ids) of the category."
  id: String
  "The name of the category."
  name: String
  playlists(
    "A country: an [ISO 3166-1 alpha-2 country code](http://en.wikipedia.org/wiki/ISO_3166-1_alpha-2). Provide this parameter to ensure that the category exists for a particular country."
    country: String, 
    "The maximum number of items to return. Default: 20. Minimum: 1. Maximum: 50."
    limit: Int = 20, 
    "The index of the first item to return. Default: 0 (the first item). Use with limit to get the next set of items."
    offset: Int = 0
  ): PlaylistsPaging
}

type CategoryPaging {
  "A link to the Web API endpoint returning the full result of the request"
  href: String
  "The requested content"
  items: [Category]
  "The maximum number of items in the response (as set in the query or by default)."
  limit: Int
  "URL to the next page of items. ( `null` if none)"
  next: String
  "The offset of the items returned (as set in the query or by default)"
  offset: Int
  "URL to the previous page of items. ( `null` if none)"
  previous: String
  "The total number of items available to return."
  total: Int
}

type PagedPlaylistsAndMessage {
  "A description of the playlists"
  message: String
  playlists: PlaylistsPaging
}

